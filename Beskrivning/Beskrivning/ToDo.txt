--> Fortsätt med det här:
1. Få till metod för PracticeWrongAnswers i klassen HandleQuestions
2. Få till poängräkningen!
4. Ändra klasserna Mathematics och Language, så de blir subklasser till Question istället. 

Klart!
Dela upp metoden AskQuestion i mindre funktioner. //KLART!


BESKRIVNING:
En protoyp på en quiz-app som riktar sig till barn/ungdomar i skolåldern. 
Frågorna i denna protoyp riktar sig till skolelever i åk 8. (kommentar 13/11 - vissa delar är mer riktade mot mellanstadieelever...). 
Frågorna följer de ämnen som man har inom skolan, och syftet med appen är att vara ett kul sätt att lära sig. 

SÅ HÄR FUNKAR APPLIKATIONEN:
Appen består av en meny med ett alternativ för respektive ämnesområden (SV, ENG, MA, SO)
Eleven väljer exempelvis SV. 
Ny meny öppnas, där eleven får välja mellan olika typer av quiz (ex. gissa årtal, rätt/fel, 1X2, fritext, glosor). (kommentar 13/11 - Inte gjort så många alternativt som jag initialt tänkt...)

Varje rätt svar genererar poäng. (kommentar 13/11 - denna del är INTE klar)
Poängen kommer sedermera ge ett sammataget betygspoäng (enbart inom appen...) i respektive ämne (ex. har 15 poäng i EN == betyg G, har 25 i SV == MVG). 
Eleven ska kunna gå in i sin betygssammanställning och se sitt "betyg" i den omgång där den gör sitt quiz. 

FUNDERINGAR LÄNGS VÄGEN:
1.  Varje fråga ska ge poäng. Frågorna hör dock till olika ämnesområden. Hur lösa detta? 

2.  Ska jag ha nåon egen klass för Quiz, eller ska det hanteras i Main-metoden? --> Ingen egen klass för Quiz- allt ligger i klasserna Subject eller Questions.

3. Möjlighet att spara tidigare resultat???


TO DO:

Klass -  Program
bool - isRunning
Metod - Innehåller meny, 

KLASS - Elev. --> Int gjort någon inloggning för elev. Detta får utvecklas framöver!
Egenskaper - Namn, poäng
Metod - Lägg till poäng till respektive ämne

KLASS - HandleElev --> Ej aktuellt pga inte gjort någon klass för elever. 
Lista för elever
Metod  - Lägg till elever till lista

KLASS - Question
Egenskaper - Fråga, Svar, Poängen
--> Lagt till under utveckling av programmet: 
Lista för options --> Används för flervalsfrågor
Lista för Keywords --> Används för att användaren ska kunna få rätt för ett svar även om fritext svaret inte överensstämmer helt med frågans svar
   


SUBKLASS - Olika subklasser för olika typer av frågor --> Skrotat pga blev enklare att hantera med egna metoder i klassen Subject.

KLASS - HandleQuestions --> Skrotat iom att jag gjorde om funktionen så att frågor hämtas från en json-fil istället. 
Lista för Frågorna

